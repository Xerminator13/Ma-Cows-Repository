This is a document detailing all of the features needed to be added to the app from greatest to least importance

Build functioning application that can be player with base game:
 - MainMenu:
  > Add onClickListeners for endGame button and allScoresButton
   - Create transitions for the onClick functions to make the buttons work when the activities are created

 - ScoreScreen:
  > Implement all cow jokes

 - DescoreScreen:
  > Layout all elements and set constraints
   - Includes TextViews for labels and basic player stats, buttons for identifying the player to be descored, confirm descore button, and back button
  > Add transition from DescoreScreen to ScoreScreen with onClickListener for back button
  > I am choosing to have 5 buttons to identify the player to be taken from instead
   - I also want to have basic score data for all other players so that the person descoring another player can make better decisions about who to descore
  >Read all comments to make sure you did not miss anything you commented to do in the class lol

 - AllScoresScreen:
  > Create new activity and add to AndroidManifest.xml
   - Create new xml file for the layout and edit the setContentView method to match the name of the layout xml file
  > Implement scrolling container to hold all elements
  > Layout all elements and set constraints
   - this includes TextViews for name labels, Field scores, barn scores, and zombie scores for all players,
        42 TextViews in total, and a back button at the top and bottom of the screen.
        Or, figure out a better way to handle score reporting
  > Add transition from AllScoresScreen to MainMenu using onClickListener for both back buttons

 - EndGameScreen:
  > Create activity and add to AndroidManifest.xml
   - Create new xml file for the layout and edit the setContentView method to match the name of the layout xml file
  > Layout all elements and set constraints
   - This includes a TextView to display name of winner, back button, and play again button
  > Add delete action using onClickListener for play again button
  > Add transition from EndGameScreen to MainMenu with onClickListener for back button
  > Add transition from EndGameScreen to MainActivity with onClickListener for back play again button

 - RulesScreen:
  > Create activity and add to AndroidManifest.xml
   - Create new xml file for the layout and edit the setContentView method to match the name of the layout xml file
  > Layout all elements and set constraints
   - this includes one TextView and a back button
   - There is an attribute for TextViews called nestedScrollingEnabled that you will need to make true for the rules TextView
  > Add transition from RulesScreen to MainActivity with onClickListener for back button

New features for enhanced game play:
 - Implement Dark Mode
  > Go back and figure out how to edit UI attributes in code to change colors to make sure that it is easy on the eyes
   - Base colors should be ok for a while but I want to have a dark mode just for the appeal

 - ChooseTimeScreen:
  > Create new activity and add to AndroidManifest.xml
  > Layout all elements and set constraints
   - this includes TextView as a label, buttons for choosing predetermined time limits for games,
        confirmation button, and an EditText field for typing in a custom amount of time.
  > Add button on MainActivity and add transition from MainActivity to ChooseTimeScreen with onClickListener
        for the transition button.
  > Create appropriate SharedPreferences to store time data.

 - Implement economy mode and appropriate activities and features to support this mode:
  > TBD